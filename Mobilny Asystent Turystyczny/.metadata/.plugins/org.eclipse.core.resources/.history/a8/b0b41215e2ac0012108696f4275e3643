package com.java.mat;

import java.util.ArrayList;

import org.w3c.dom.Document;

import android.graphics.Color;

import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.android.gms.maps.model.PolylineOptions;
import com.java.mat.GMapV2Direction.Mode;

public class FunctionMaps {
	
	private ArrayList<MarkerOptions> markers;
	private GMapV2Direction md;
	private ArrayList<PolylineOptions> routes;
	private ArrayList<MarkerOptions> places;
	
	private GMapV2Places mp;
	
	//konstruktor bezarg.
	public FunctionMaps()
	{
		markers = new ArrayList<MarkerOptions>();
		md = new GMapV2Direction();
		routes = new ArrayList<PolylineOptions>();
		places = new ArrayList<MarkerOptions>();
		mp = new GMapV2Places();
		//testowe spinki
       	addLocation(52.259,21.020,"Tomek");
    	addLocation(50.259,20.020,"Mateusz");
    	addLocation(48.259,20.020,"Waldek");
    	addRoute(markers.get(0), markers.get(1),Mode.walking);
    	addPlaces(markers.get(0));
    	
    	//g.getDocument(markers.get(0).getPosition());
	}
	
	//dodaje do listy jedn¹ spinkê
	void setLocation(MarkerOptions marker)
	{
		markers.add(marker);
	}
	
	//zwraca spinkê o podanym indeksie
	ArrayList<MarkerOptions> getLocations()
	{
		return markers;
	}
	
	//dodaje do listy jedn¹ spinkê z wspó³rzêdne
	void addLocation(double x,double y,String name)
	{
		LatLng position = new LatLng(x,y);
		MarkerOptions marker = new MarkerOptions();
		marker.position(position);
		marker.visible(true);
		marker.title(name);
		markers.add(marker);
	}
	
	ArrayList<PolylineOptions> getRoutes()
	{
		return routes;
	}
	
	void updateLocation()
	{

	}
	
	void updateRoute()
	{
		for(int i=0;i<routes.size();i++)
		{
			//routes
		}
			
	}
	
	void addRoute(MarkerOptions m1,MarkerOptions m2,Mode mode)
	{
		Document doc = md.getDocument(m1.getPosition(), m2.getPosition(), mode.toString());
		PolylineOptions rectLine = new PolylineOptions().width(3).color(Color.BLUE);
		
		rectLine.addAll(md.getDirection(doc));
		routes.add(rectLine);
	}
	
	void addPlaces(MarkerOptions m)
	{
		Document doc = mp.getDocument(m.getPosition());
		places.addAll(mp.getPlaces(doc));
	}
	
	ArrayList<MarkerOptions> gePlaces()
	{
		return places;
	}

}
